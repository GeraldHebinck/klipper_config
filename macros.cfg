#from https://github.com/KevinOConnor/klipper/blob/master/config/sample-macros.cfg

[gcode_macro START_PRINT_SINGLE]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    # Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z=0.0
    # use absolute coordinates
    G90
    # extruder relative mode
    M83 
    ; Reset speed and extrusion rates
    M220 S100
    M221 S100

    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}
    M117 Bed Heating
    M190 S{BED_TEMP} ; wait for bed temp
    M117 Homing
    G28
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
    M117 Waiting for Extruder
    M109 S{EXTRUDER_TEMP} ; wait for extruder temp
    # Prime line routine
    T0
    M117 Prime line
    G1 Z5 F1000
    G1 X55.0 Y3.0 F6000.0
    G1 Z0.3 F1000.0
    G92 E0.0
    G1 X205.0 E20.0 F2200.0
    G1 Y2.0 F1000.0
    G1 X55.0 E20 F1400.0
    G1 Z0.20 F1000.0
    G1 X5.0 E4.0 F1000.0
    G92 E0.0 ; reset extrusion distance
    ; Final print adjustments
    M117 Printing

[gcode_macro START_PRINT_DUAL]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    {% set EXTRUDER1_TEMP = params.EXTRUDER1_TEMP|default(190)|float %}
    # Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z=0.0
    # use absolute coordinates
    G90
    # extruder relative mode
    M83 
    # Reset speed and extrusion rates
    M220 S100
    M221 S100

    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}
    M117 Bed Heating
    M190 S{BED_TEMP} ; wait for bed temp
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
    SET_HEATER_TEMPERATURE HEATER=extruder1 TARGET={EXTRUDER1_TEMP}
    M117 Homing
    G28

    M117 Activate T0
    T0
    M117 Waiting for Extruder T0
    M109 S{EXTRUDER_TEMP} ; wait for extruder temp
    # Prime line routine
    M117 Prime line T0
    G1 Z5 F1000
    G1 X55.0 Y3.0 F6000.0
    G1 Z0.3 F1000.0
    G92 E0.0
    G1 X205.0 E20.0 F2200.0
    G1 Y2.0 F1000.0
    G1 X55.0 E20 F1400.0
    G1 Z0.20 F1000.0
    G1 X5.0 E4.0 F1000.0
    G92 E0.0 ; reset extrusion distance
    G1 Z5 F1000

    M117 Activate T1
    T1
    M117 Waiting for Extruder T1
    M109 S{EXTRUDER1_TEMP} ; wait for extruder temp

    # Prime line routine
    M117 Prime line T1
    G1 Z5 F1000
    G1 X55.0 Y5.0 F6000.0
    G1 Z0.3 F1000.0
    G92 E0.0
    G1 X205.0 E20.0 F2200.0
    G1 Y4.0 F1000.0
    G1 X55.0 E20 F1400.0
    G1 Z0.20 F1000.0
    G1 X5.0 E4.0 F1000.0
    G92 E0.0 ; reset extrusion distance
    G1 Z5

    M117 Print in progress


[gcode_macro END_PRINT]
gcode:
    M117 Done
    G4
    # Move nozzle away from print while retracting
    G92 E0.0
    G1 E-01.2 F1800
    G91
    G1 X-0.5 Y-0.5 F1200
    G1 X1 Y1 F1200
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G90
    # Present bed
    G1 Y300 F18000
    # Home Extruders
    G28 X
    # Turn off bed, extruder, and fan
    TURN_OFF_HEATERS
    M106 S0
    # Disable steppers
    M84

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 Z5
    G90
    G1 X150 Y0 F9000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    M106 S0
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT
    
[gcode_macro PROBE_SCREWS]
gcode:
    G28
    screws_tilt_calculate

[gcode_macro M600]
gcode:
    PAUSE

[gcode_macro SEARCH_VARS]
gcode:
    {% set search = params.S|lower %}
    {% set ns = namespace() %}
    {% for item in printer  %}
        {% if ' ' in item %}
            {% set ns.path = ['printer', "['%s']" % (item), ''] %}
        {% else %}
            {% set ns.path = ['printer.', item, ''] %}   
        {% endif %} 

        {% if search in ns.path|lower %}
            { action_respond_info(ns.path|join) }
        {% endif %} 

        {% if printer[item].items() %}
            {% for childkey, child in printer[item].items() recursive %}
                {% set ns.path = ns.path[:loop.depth|int + 1] %}

                {% if ' ' in childkey %}
                    {% set null = ns.path.append("['%s']" % (childkey)) %}
                {% else %}
                    {% set null = ns.path.append(".%s" % (childkey)) %}
                {% endif %} 

                {% if child is mapping  %}
                    { loop(child.items()) }
                {% else %}
                    {% if search in ns.path|lower %}
                        { action_respond_info("%s : %s" % (ns.path|join, child)) }   
                    {% endif %} 
                {% endif %} 
                
            {% endfor %}
        {% endif %} 
    {% endfor %}